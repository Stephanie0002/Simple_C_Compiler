Terminals unused in grammar

   ERROR
   VOID


State 151 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompUnit Decl
    2         | Decl
    3         | CompUnit FuncDef
    4         | FuncDef

    5 Decl: ConstDecl
    6     | VarDecl

    7 ConstDecl: CONST BType ConstDef TempA ';'

    8 TempA: TempA ',' ConstDef
    9      | /* empty */

   10 BType: INT

   11 ConstDef: IDENT '=' ConstInitVal
   12         | IDENT '[' ConstExp ']' '=' ConstInitVal

   13 ConstInitVal: ConstExp
   14             | '{' '}'
   15             | '{' ConstExp TempB '}'

   16 TempB: TempB ',' ConstExp
   17      | /* empty */

   18 VarDecl: BType VarDef TempC ';'

   19 TempC: TempC ',' VarDef
   20      | /* empty */

   21 VarDef: IDENT
   22       | IDENT '[' ConstExp ']'
   23       | IDENT '=' InitVal
   24       | IDENT '[' ConstExp ']' '=' InitVal

   25 InitVal: Exp
   26        | '{' '}'
   27        | '{' Exp TempD '}'

   28 TempD: TempD ',' Exp
   29      | /* empty */

   30 FuncDef: BType IDENT '(' ')' Block
   31        | BType IDENT '(' FuncFParams ')' Block

   32 FuncFParams: FuncFParam TempE

   33 TempE: TempE ',' FuncFParam
   34      | /* empty */

   35 FuncFParam: BType IDENT
   36           | BType IDENT '[' ']'

   37 Block: '{' TempF '}'

   38 TempF: TempF BlockItem
   39      | /* empty */

   40 BlockItem: Decl
   41          | Stmt

   42 Stmt: LVal '=' Exp ';'
   43     | Exp ';'
   44     | ';'
   45     | Block
   46     | IF '(' Cond ')' Stmt
   47     | IF '(' Cond ')' Stmt ELSE Stmt
   48     | WHILE '(' Cond ')' Stmt
   49     | BREAK ';'
   50     | CONTINUE ';'
   51     | RETURN ';'
   52     | RETURN Exp ';'

   53 Exp: AddExp

   54 Cond: LOrExp

   55 LVal: IDENT
   56     | IDENT '[' Exp ']'

   57 PrimaryExp: '(' Exp ')'
   58           | LVal
   59           | NUMBER

   60 UnaryExp: PrimaryExp
   61         | IDENT '(' ')'
   62         | IDENT '(' FuncRParams ')'
   63         | UnaryOp UnaryExp

   64 UnaryOp: '+'
   65        | '-'
   66        | '!'

   67 FuncRParams: Exp TempG

   68 TempG: TempG ',' Exp
   69      | /* empty */

   70 AddExp: MulExp
   71       | AddExp '+' MulExp
   72       | AddExp '-' MulExp

   73 MulExp: UnaryExp
   74       | MulExp '*' UnaryExp
   75       | MulExp '/' UnaryExp
   76       | MulExp '%' UnaryExp

   77 RelExp: AddExp
   78       | RelExp '<' AddExp
   79       | RelExp '>' AddExp
   80       | RelExp LE_OP AddExp
   81       | RelExp GE_OP AddExp

   82 EqExp: RelExp
   83      | EqExp EQ_OP RelExp
   84      | EqExp NE_OP RelExp

   85 LAndExp: EqExp
   86        | LAndExp AND_OP EqExp

   87 LOrExp: LAndExp
   88       | LOrExp OR_OP LAndExp

   89 ConstExp: AddExp


Terminals, with rules where they appear

$end (0) 0
'!' (33) 66
'%' (37) 76
'(' (40) 30 31 46 47 48 57 61 62
')' (41) 30 31 46 47 48 57 61 62
'*' (42) 74
'+' (43) 64 71
',' (44) 8 16 19 28 33 68
'-' (45) 65 72
'/' (47) 75
';' (59) 7 18 42 43 44 49 50 51 52
'<' (60) 78
'=' (61) 11 12 23 24 42
'>' (62) 79
'[' (91) 12 22 24 36 56
']' (93) 12 22 24 36 56
'{' (123) 14 15 26 27 37
'}' (125) 14 15 26 27 37
error (256)
ERROR (258)
NUMBER (259) 59
CONST (260) 7
IDENT (261) 11 12 21 22 23 24 30 31 35 36 55 56 61 62
INT (262) 10
VOID (263)
IF (264) 46 47
ELSE (265) 47
WHILE (266) 48
BREAK (267) 49
CONTINUE (268) 50
RETURN (269) 51 52
LE_OP (270) 80
GE_OP (271) 81
EQ_OP (272) 83
NE_OP (273) 84
AND_OP (274) 86
OR_OP (275) 88


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
CompUnit (39)
    on left: 1 2 3 4, on right: 0 1 3
Decl (40)
    on left: 5 6, on right: 1 2 40
ConstDecl (41)
    on left: 7, on right: 5
TempA (42)
    on left: 8 9, on right: 7 8
BType (43)
    on left: 10, on right: 7 18 30 31 35 36
ConstDef (44)
    on left: 11 12, on right: 7 8
ConstInitVal (45)
    on left: 13 14 15, on right: 11 12
TempB (46)
    on left: 16 17, on right: 15 16
VarDecl (47)
    on left: 18, on right: 6
TempC (48)
    on left: 19 20, on right: 18 19
VarDef (49)
    on left: 21 22 23 24, on right: 18 19
InitVal (50)
    on left: 25 26 27, on right: 23 24
TempD (51)
    on left: 28 29, on right: 27 28
FuncDef (52)
    on left: 30 31, on right: 3 4
FuncFParams (53)
    on left: 32, on right: 31
TempE (54)
    on left: 33 34, on right: 32 33
FuncFParam (55)
    on left: 35 36, on right: 32 33
Block (56)
    on left: 37, on right: 30 31 45
TempF (57)
    on left: 38 39, on right: 37 38
BlockItem (58)
    on left: 40 41, on right: 38
Stmt (59)
    on left: 42 43 44 45 46 47 48 49 50 51 52, on right: 41 46 47 48
Exp (60)
    on left: 53, on right: 25 27 28 42 43 52 56 57 67 68
Cond (61)
    on left: 54, on right: 46 47 48
LVal (62)
    on left: 55 56, on right: 42 58
PrimaryExp (63)
    on left: 57 58 59, on right: 60
UnaryExp (64)
    on left: 60 61 62 63, on right: 63 73 74 75 76
UnaryOp (65)
    on left: 64 65 66, on right: 63
FuncRParams (66)
    on left: 67, on right: 62
TempG (67)
    on left: 68 69, on right: 67 68
AddExp (68)
    on left: 70 71 72, on right: 53 71 72 77 78 79 80 81 89
MulExp (69)
    on left: 73 74 75 76, on right: 70 71 72 74 75 76
RelExp (70)
    on left: 77 78 79 80 81, on right: 78 79 80 81 82 83 84
EqExp (71)
    on left: 82 83 84, on right: 83 84 85 86
LAndExp (72)
    on left: 85 86, on right: 86 87 88
LOrExp (73)
    on left: 87 88, on right: 54 88
ConstExp (74)
    on left: 89, on right: 12 13 15 16 22 24


state 0

    0 $accept: . CompUnit $end

    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    CompUnit   go to state 3
    Decl       go to state 4
    ConstDecl  go to state 5
    BType      go to state 6
    VarDecl    go to state 7
    FuncDef    go to state 8


state 1

    7 ConstDecl: CONST . BType ConstDef TempA ';'

    INT  shift, and go to state 2

    BType  go to state 9


state 2

   10 BType: INT .

    $default  reduce using rule 10 (BType)


state 3

    0 $accept: CompUnit . $end
    1 CompUnit: CompUnit . Decl
    3         | CompUnit . FuncDef

    $end   shift, and go to state 10
    CONST  shift, and go to state 1
    INT    shift, and go to state 2

    Decl       go to state 11
    ConstDecl  go to state 5
    BType      go to state 6
    VarDecl    go to state 7
    FuncDef    go to state 12


state 4

    2 CompUnit: Decl .

    $default  reduce using rule 2 (CompUnit)


state 5

    5 Decl: ConstDecl .

    $default  reduce using rule 5 (Decl)


state 6

   18 VarDecl: BType . VarDef TempC ';'
   30 FuncDef: BType . IDENT '(' ')' Block
   31        | BType . IDENT '(' FuncFParams ')' Block

    IDENT  shift, and go to state 13

    VarDef  go to state 14


state 7

    6 Decl: VarDecl .

    $default  reduce using rule 6 (Decl)


state 8

    4 CompUnit: FuncDef .

    $default  reduce using rule 4 (CompUnit)


state 9

    7 ConstDecl: CONST BType . ConstDef TempA ';'

    IDENT  shift, and go to state 15

    ConstDef  go to state 16


state 10

    0 $accept: CompUnit $end .

    $default  accept


state 11

    1 CompUnit: CompUnit Decl .

    $default  reduce using rule 1 (CompUnit)


state 12

    3 CompUnit: CompUnit FuncDef .

    $default  reduce using rule 3 (CompUnit)


state 13

   21 VarDef: IDENT .
   22       | IDENT . '[' ConstExp ']'
   23       | IDENT . '=' InitVal
   24       | IDENT . '[' ConstExp ']' '=' InitVal
   30 FuncDef: BType IDENT . '(' ')' Block
   31        | BType IDENT . '(' FuncFParams ')' Block

    '='  shift, and go to state 17
    '['  shift, and go to state 18
    '('  shift, and go to state 19

    $default  reduce using rule 21 (VarDef)


state 14

   18 VarDecl: BType VarDef . TempC ';'

    $default  reduce using rule 20 (TempC)

    TempC  go to state 20


state 15

   11 ConstDef: IDENT . '=' ConstInitVal
   12         | IDENT . '[' ConstExp ']' '=' ConstInitVal

    '='  shift, and go to state 21
    '['  shift, and go to state 22


state 16

    7 ConstDecl: CONST BType ConstDef . TempA ';'

    $default  reduce using rule 9 (TempA)

    TempA  go to state 23


state 17

   23 VarDef: IDENT '=' . InitVal

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29
    '{'     shift, and go to state 30

    InitVal     go to state 31
    Exp         go to state 32
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 18

   22 VarDef: IDENT '[' . ConstExp ']'
   24       | IDENT '[' . ConstExp ']' '=' InitVal

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 39
    MulExp      go to state 38
    ConstExp    go to state 40


state 19

   30 FuncDef: BType IDENT '(' . ')' Block
   31        | BType IDENT '(' . FuncFParams ')' Block

    INT  shift, and go to state 2
    ')'  shift, and go to state 41

    BType        go to state 42
    FuncFParams  go to state 43
    FuncFParam   go to state 44


state 20

   18 VarDecl: BType VarDef TempC . ';'
   19 TempC: TempC . ',' VarDef

    ';'  shift, and go to state 45
    ','  shift, and go to state 46


state 21

   11 ConstDef: IDENT '=' . ConstInitVal

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29
    '{'     shift, and go to state 47

    ConstInitVal  go to state 48
    LVal          go to state 33
    PrimaryExp    go to state 34
    UnaryExp      go to state 35
    UnaryOp       go to state 36
    AddExp        go to state 39
    MulExp        go to state 38
    ConstExp      go to state 49


state 22

   12 ConstDef: IDENT '[' . ConstExp ']' '=' ConstInitVal

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 39
    MulExp      go to state 38
    ConstExp    go to state 50


state 23

    7 ConstDecl: CONST BType ConstDef TempA . ';'
    8 TempA: TempA . ',' ConstDef

    ';'  shift, and go to state 51
    ','  shift, and go to state 52


state 24

   59 PrimaryExp: NUMBER .

    $default  reduce using rule 59 (PrimaryExp)


state 25

   55 LVal: IDENT .
   56     | IDENT . '[' Exp ']'
   61 UnaryExp: IDENT . '(' ')'
   62         | IDENT . '(' FuncRParams ')'

    '['  shift, and go to state 53
    '('  shift, and go to state 54

    $default  reduce using rule 55 (LVal)


state 26

   64 UnaryOp: '+' .

    $default  reduce using rule 64 (UnaryOp)


state 27

   65 UnaryOp: '-' .

    $default  reduce using rule 65 (UnaryOp)


state 28

   66 UnaryOp: '!' .

    $default  reduce using rule 66 (UnaryOp)


state 29

   57 PrimaryExp: '(' . Exp ')'

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    Exp         go to state 55
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 30

   26 InitVal: '{' . '}'
   27        | '{' . Exp TempD '}'

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29
    '}'     shift, and go to state 56

    Exp         go to state 57
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 31

   23 VarDef: IDENT '=' InitVal .

    $default  reduce using rule 23 (VarDef)


state 32

   25 InitVal: Exp .

    $default  reduce using rule 25 (InitVal)


state 33

   58 PrimaryExp: LVal .

    $default  reduce using rule 58 (PrimaryExp)


state 34

   60 UnaryExp: PrimaryExp .

    $default  reduce using rule 60 (UnaryExp)


state 35

   73 MulExp: UnaryExp .

    $default  reduce using rule 73 (MulExp)


state 36

   63 UnaryExp: UnaryOp . UnaryExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 58
    UnaryOp     go to state 36


state 37

   53 Exp: AddExp .
   71 AddExp: AddExp . '+' MulExp
   72       | AddExp . '-' MulExp

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60

    $default  reduce using rule 53 (Exp)


state 38

   70 AddExp: MulExp .
   74 MulExp: MulExp . '*' UnaryExp
   75       | MulExp . '/' UnaryExp
   76       | MulExp . '%' UnaryExp

    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63

    $default  reduce using rule 70 (AddExp)


state 39

   71 AddExp: AddExp . '+' MulExp
   72       | AddExp . '-' MulExp
   89 ConstExp: AddExp .

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60

    $default  reduce using rule 89 (ConstExp)


state 40

   22 VarDef: IDENT '[' ConstExp . ']'
   24       | IDENT '[' ConstExp . ']' '=' InitVal

    ']'  shift, and go to state 64


state 41

   30 FuncDef: BType IDENT '(' ')' . Block

    '{'  shift, and go to state 65

    Block  go to state 66


state 42

   35 FuncFParam: BType . IDENT
   36           | BType . IDENT '[' ']'

    IDENT  shift, and go to state 67


state 43

   31 FuncDef: BType IDENT '(' FuncFParams . ')' Block

    ')'  shift, and go to state 68


state 44

   32 FuncFParams: FuncFParam . TempE

    $default  reduce using rule 34 (TempE)

    TempE  go to state 69


state 45

   18 VarDecl: BType VarDef TempC ';' .

    $default  reduce using rule 18 (VarDecl)


state 46

   19 TempC: TempC ',' . VarDef

    IDENT  shift, and go to state 70

    VarDef  go to state 71


state 47

   14 ConstInitVal: '{' . '}'
   15             | '{' . ConstExp TempB '}'

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29
    '}'     shift, and go to state 72

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 39
    MulExp      go to state 38
    ConstExp    go to state 73


state 48

   11 ConstDef: IDENT '=' ConstInitVal .

    $default  reduce using rule 11 (ConstDef)


state 49

   13 ConstInitVal: ConstExp .

    $default  reduce using rule 13 (ConstInitVal)


state 50

   12 ConstDef: IDENT '[' ConstExp . ']' '=' ConstInitVal

    ']'  shift, and go to state 74


state 51

    7 ConstDecl: CONST BType ConstDef TempA ';' .

    $default  reduce using rule 7 (ConstDecl)


state 52

    8 TempA: TempA ',' . ConstDef

    IDENT  shift, and go to state 15

    ConstDef  go to state 75


state 53

   56 LVal: IDENT '[' . Exp ']'

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    Exp         go to state 76
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 54

   61 UnaryExp: IDENT '(' . ')'
   62         | IDENT '(' . FuncRParams ')'

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29
    ')'     shift, and go to state 77

    Exp          go to state 78
    LVal         go to state 33
    PrimaryExp   go to state 34
    UnaryExp     go to state 35
    UnaryOp      go to state 36
    FuncRParams  go to state 79
    AddExp       go to state 37
    MulExp       go to state 38


state 55

   57 PrimaryExp: '(' Exp . ')'

    ')'  shift, and go to state 80


state 56

   26 InitVal: '{' '}' .

    $default  reduce using rule 26 (InitVal)


state 57

   27 InitVal: '{' Exp . TempD '}'

    $default  reduce using rule 29 (TempD)

    TempD  go to state 81


state 58

   63 UnaryExp: UnaryOp UnaryExp .

    $default  reduce using rule 63 (UnaryExp)


state 59

   71 AddExp: AddExp '+' . MulExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    MulExp      go to state 82


state 60

   72 AddExp: AddExp '-' . MulExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    MulExp      go to state 83


state 61

   74 MulExp: MulExp '*' . UnaryExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 84
    UnaryOp     go to state 36


state 62

   75 MulExp: MulExp '/' . UnaryExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 85
    UnaryOp     go to state 36


state 63

   76 MulExp: MulExp '%' . UnaryExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 86
    UnaryOp     go to state 36


state 64

   22 VarDef: IDENT '[' ConstExp ']' .
   24       | IDENT '[' ConstExp ']' . '=' InitVal

    '='  shift, and go to state 87

    $default  reduce using rule 22 (VarDef)


state 65

   37 Block: '{' . TempF '}'

    $default  reduce using rule 39 (TempF)

    TempF  go to state 88


state 66

   30 FuncDef: BType IDENT '(' ')' Block .

    $default  reduce using rule 30 (FuncDef)


state 67

   35 FuncFParam: BType IDENT .
   36           | BType IDENT . '[' ']'

    '['  shift, and go to state 89

    $default  reduce using rule 35 (FuncFParam)


state 68

   31 FuncDef: BType IDENT '(' FuncFParams ')' . Block

    '{'  shift, and go to state 65

    Block  go to state 90


state 69

   32 FuncFParams: FuncFParam TempE .
   33 TempE: TempE . ',' FuncFParam

    ','  shift, and go to state 91

    $default  reduce using rule 32 (FuncFParams)


state 70

   21 VarDef: IDENT .
   22       | IDENT . '[' ConstExp ']'
   23       | IDENT . '=' InitVal
   24       | IDENT . '[' ConstExp ']' '=' InitVal

    '='  shift, and go to state 17
    '['  shift, and go to state 18

    $default  reduce using rule 21 (VarDef)


state 71

   19 TempC: TempC ',' VarDef .

    $default  reduce using rule 19 (TempC)


state 72

   14 ConstInitVal: '{' '}' .

    $default  reduce using rule 14 (ConstInitVal)


state 73

   15 ConstInitVal: '{' ConstExp . TempB '}'

    $default  reduce using rule 17 (TempB)

    TempB  go to state 92


state 74

   12 ConstDef: IDENT '[' ConstExp ']' . '=' ConstInitVal

    '='  shift, and go to state 93


state 75

    8 TempA: TempA ',' ConstDef .

    $default  reduce using rule 8 (TempA)


state 76

   56 LVal: IDENT '[' Exp . ']'

    ']'  shift, and go to state 94


state 77

   61 UnaryExp: IDENT '(' ')' .

    $default  reduce using rule 61 (UnaryExp)


state 78

   67 FuncRParams: Exp . TempG

    $default  reduce using rule 69 (TempG)

    TempG  go to state 95


state 79

   62 UnaryExp: IDENT '(' FuncRParams . ')'

    ')'  shift, and go to state 96


state 80

   57 PrimaryExp: '(' Exp ')' .

    $default  reduce using rule 57 (PrimaryExp)


state 81

   27 InitVal: '{' Exp TempD . '}'
   28 TempD: TempD . ',' Exp

    ','  shift, and go to state 97
    '}'  shift, and go to state 98


state 82

   71 AddExp: AddExp '+' MulExp .
   74 MulExp: MulExp . '*' UnaryExp
   75       | MulExp . '/' UnaryExp
   76       | MulExp . '%' UnaryExp

    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63

    $default  reduce using rule 71 (AddExp)


state 83

   72 AddExp: AddExp '-' MulExp .
   74 MulExp: MulExp . '*' UnaryExp
   75       | MulExp . '/' UnaryExp
   76       | MulExp . '%' UnaryExp

    '*'  shift, and go to state 61
    '/'  shift, and go to state 62
    '%'  shift, and go to state 63

    $default  reduce using rule 72 (AddExp)


state 84

   74 MulExp: MulExp '*' UnaryExp .

    $default  reduce using rule 74 (MulExp)


state 85

   75 MulExp: MulExp '/' UnaryExp .

    $default  reduce using rule 75 (MulExp)


state 86

   76 MulExp: MulExp '%' UnaryExp .

    $default  reduce using rule 76 (MulExp)


state 87

   24 VarDef: IDENT '[' ConstExp ']' '=' . InitVal

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29
    '{'     shift, and go to state 30

    InitVal     go to state 99
    Exp         go to state 32
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 88

   37 Block: '{' TempF . '}'
   38 TempF: TempF . BlockItem

    NUMBER    shift, and go to state 24
    CONST     shift, and go to state 1
    IDENT     shift, and go to state 25
    INT       shift, and go to state 2
    IF        shift, and go to state 100
    WHILE     shift, and go to state 101
    BREAK     shift, and go to state 102
    CONTINUE  shift, and go to state 103
    RETURN    shift, and go to state 104
    '+'       shift, and go to state 26
    '-'       shift, and go to state 27
    '!'       shift, and go to state 28
    ';'       shift, and go to state 105
    '('       shift, and go to state 29
    '{'       shift, and go to state 65
    '}'       shift, and go to state 106

    Decl        go to state 107
    ConstDecl   go to state 5
    BType       go to state 108
    VarDecl     go to state 7
    Block       go to state 109
    BlockItem   go to state 110
    Stmt        go to state 111
    Exp         go to state 112
    LVal        go to state 113
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 89

   36 FuncFParam: BType IDENT '[' . ']'

    ']'  shift, and go to state 114


state 90

   31 FuncDef: BType IDENT '(' FuncFParams ')' Block .

    $default  reduce using rule 31 (FuncDef)


state 91

   33 TempE: TempE ',' . FuncFParam

    INT  shift, and go to state 2

    BType       go to state 42
    FuncFParam  go to state 115


state 92

   15 ConstInitVal: '{' ConstExp TempB . '}'
   16 TempB: TempB . ',' ConstExp

    ','  shift, and go to state 116
    '}'  shift, and go to state 117


state 93

   12 ConstDef: IDENT '[' ConstExp ']' '=' . ConstInitVal

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29
    '{'     shift, and go to state 47

    ConstInitVal  go to state 118
    LVal          go to state 33
    PrimaryExp    go to state 34
    UnaryExp      go to state 35
    UnaryOp       go to state 36
    AddExp        go to state 39
    MulExp        go to state 38
    ConstExp      go to state 49


state 94

   56 LVal: IDENT '[' Exp ']' .

    $default  reduce using rule 56 (LVal)


state 95

   67 FuncRParams: Exp TempG .
   68 TempG: TempG . ',' Exp

    ','  shift, and go to state 119

    $default  reduce using rule 67 (FuncRParams)


state 96

   62 UnaryExp: IDENT '(' FuncRParams ')' .

    $default  reduce using rule 62 (UnaryExp)


state 97

   28 TempD: TempD ',' . Exp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    Exp         go to state 120
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 98

   27 InitVal: '{' Exp TempD '}' .

    $default  reduce using rule 27 (InitVal)


state 99

   24 VarDef: IDENT '[' ConstExp ']' '=' InitVal .

    $default  reduce using rule 24 (VarDef)


state 100

   46 Stmt: IF . '(' Cond ')' Stmt
   47     | IF . '(' Cond ')' Stmt ELSE Stmt

    '('  shift, and go to state 121


state 101

   48 Stmt: WHILE . '(' Cond ')' Stmt

    '('  shift, and go to state 122


state 102

   49 Stmt: BREAK . ';'

    ';'  shift, and go to state 123


state 103

   50 Stmt: CONTINUE . ';'

    ';'  shift, and go to state 124


state 104

   51 Stmt: RETURN . ';'
   52     | RETURN . Exp ';'

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    ';'     shift, and go to state 125
    '('     shift, and go to state 29

    Exp         go to state 126
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 105

   44 Stmt: ';' .

    $default  reduce using rule 44 (Stmt)


state 106

   37 Block: '{' TempF '}' .

    $default  reduce using rule 37 (Block)


state 107

   40 BlockItem: Decl .

    $default  reduce using rule 40 (BlockItem)


state 108

   18 VarDecl: BType . VarDef TempC ';'

    IDENT  shift, and go to state 70

    VarDef  go to state 14


state 109

   45 Stmt: Block .

    $default  reduce using rule 45 (Stmt)


state 110

   38 TempF: TempF BlockItem .

    $default  reduce using rule 38 (TempF)


state 111

   41 BlockItem: Stmt .

    $default  reduce using rule 41 (BlockItem)


state 112

   43 Stmt: Exp . ';'

    ';'  shift, and go to state 127


state 113

   42 Stmt: LVal . '=' Exp ';'
   58 PrimaryExp: LVal .

    '='  shift, and go to state 128

    $default  reduce using rule 58 (PrimaryExp)


state 114

   36 FuncFParam: BType IDENT '[' ']' .

    $default  reduce using rule 36 (FuncFParam)


state 115

   33 TempE: TempE ',' FuncFParam .

    $default  reduce using rule 33 (TempE)


state 116

   16 TempB: TempB ',' . ConstExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 39
    MulExp      go to state 38
    ConstExp    go to state 129


state 117

   15 ConstInitVal: '{' ConstExp TempB '}' .

    $default  reduce using rule 15 (ConstInitVal)


state 118

   12 ConstDef: IDENT '[' ConstExp ']' '=' ConstInitVal .

    $default  reduce using rule 12 (ConstDef)


state 119

   68 TempG: TempG ',' . Exp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    Exp         go to state 130
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 120

   28 TempD: TempD ',' Exp .

    $default  reduce using rule 28 (TempD)


state 121

   46 Stmt: IF '(' . Cond ')' Stmt
   47     | IF '(' . Cond ')' Stmt ELSE Stmt

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    Cond        go to state 131
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 132
    MulExp      go to state 38
    RelExp      go to state 133
    EqExp       go to state 134
    LAndExp     go to state 135
    LOrExp      go to state 136


state 122

   48 Stmt: WHILE '(' . Cond ')' Stmt

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    Cond        go to state 137
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 132
    MulExp      go to state 38
    RelExp      go to state 133
    EqExp       go to state 134
    LAndExp     go to state 135
    LOrExp      go to state 136


state 123

   49 Stmt: BREAK ';' .

    $default  reduce using rule 49 (Stmt)


state 124

   50 Stmt: CONTINUE ';' .

    $default  reduce using rule 50 (Stmt)


state 125

   51 Stmt: RETURN ';' .

    $default  reduce using rule 51 (Stmt)


state 126

   52 Stmt: RETURN Exp . ';'

    ';'  shift, and go to state 138


state 127

   43 Stmt: Exp ';' .

    $default  reduce using rule 43 (Stmt)


state 128

   42 Stmt: LVal '=' . Exp ';'

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    Exp         go to state 139
    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 129

   16 TempB: TempB ',' ConstExp .

    $default  reduce using rule 16 (TempB)


state 130

   68 TempG: TempG ',' Exp .

    $default  reduce using rule 68 (TempG)


state 131

   46 Stmt: IF '(' Cond . ')' Stmt
   47     | IF '(' Cond . ')' Stmt ELSE Stmt

    ')'  shift, and go to state 140


state 132

   71 AddExp: AddExp . '+' MulExp
   72       | AddExp . '-' MulExp
   77 RelExp: AddExp .

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60

    $default  reduce using rule 77 (RelExp)


state 133

   78 RelExp: RelExp . '<' AddExp
   79       | RelExp . '>' AddExp
   80       | RelExp . LE_OP AddExp
   81       | RelExp . GE_OP AddExp
   82 EqExp: RelExp .

    '<'    shift, and go to state 141
    '>'    shift, and go to state 142
    LE_OP  shift, and go to state 143
    GE_OP  shift, and go to state 144

    $default  reduce using rule 82 (EqExp)


state 134

   83 EqExp: EqExp . EQ_OP RelExp
   84      | EqExp . NE_OP RelExp
   85 LAndExp: EqExp .

    EQ_OP  shift, and go to state 145
    NE_OP  shift, and go to state 146

    $default  reduce using rule 85 (LAndExp)


state 135

   86 LAndExp: LAndExp . AND_OP EqExp
   87 LOrExp: LAndExp .

    AND_OP  shift, and go to state 147

    $default  reduce using rule 87 (LOrExp)


state 136

   54 Cond: LOrExp .
   88 LOrExp: LOrExp . OR_OP LAndExp

    OR_OP  shift, and go to state 148

    $default  reduce using rule 54 (Cond)


state 137

   48 Stmt: WHILE '(' Cond . ')' Stmt

    ')'  shift, and go to state 149


state 138

   52 Stmt: RETURN Exp ';' .

    $default  reduce using rule 52 (Stmt)


state 139

   42 Stmt: LVal '=' Exp . ';'

    ';'  shift, and go to state 150


state 140

   46 Stmt: IF '(' Cond ')' . Stmt
   47     | IF '(' Cond ')' . Stmt ELSE Stmt

    NUMBER    shift, and go to state 24
    IDENT     shift, and go to state 25
    IF        shift, and go to state 100
    WHILE     shift, and go to state 101
    BREAK     shift, and go to state 102
    CONTINUE  shift, and go to state 103
    RETURN    shift, and go to state 104
    '+'       shift, and go to state 26
    '-'       shift, and go to state 27
    '!'       shift, and go to state 28
    ';'       shift, and go to state 105
    '('       shift, and go to state 29
    '{'       shift, and go to state 65

    Block       go to state 109
    Stmt        go to state 151
    Exp         go to state 112
    LVal        go to state 113
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 141

   78 RelExp: RelExp '<' . AddExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 152
    MulExp      go to state 38


state 142

   79 RelExp: RelExp '>' . AddExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 153
    MulExp      go to state 38


state 143

   80 RelExp: RelExp LE_OP . AddExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 154
    MulExp      go to state 38


state 144

   81 RelExp: RelExp GE_OP . AddExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 155
    MulExp      go to state 38


state 145

   83 EqExp: EqExp EQ_OP . RelExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 132
    MulExp      go to state 38
    RelExp      go to state 156


state 146

   84 EqExp: EqExp NE_OP . RelExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 132
    MulExp      go to state 38
    RelExp      go to state 157


state 147

   86 LAndExp: LAndExp AND_OP . EqExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 132
    MulExp      go to state 38
    RelExp      go to state 133
    EqExp       go to state 158


state 148

   88 LOrExp: LOrExp OR_OP . LAndExp

    NUMBER  shift, and go to state 24
    IDENT   shift, and go to state 25
    '+'     shift, and go to state 26
    '-'     shift, and go to state 27
    '!'     shift, and go to state 28
    '('     shift, and go to state 29

    LVal        go to state 33
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 132
    MulExp      go to state 38
    RelExp      go to state 133
    EqExp       go to state 134
    LAndExp     go to state 159


state 149

   48 Stmt: WHILE '(' Cond ')' . Stmt

    NUMBER    shift, and go to state 24
    IDENT     shift, and go to state 25
    IF        shift, and go to state 100
    WHILE     shift, and go to state 101
    BREAK     shift, and go to state 102
    CONTINUE  shift, and go to state 103
    RETURN    shift, and go to state 104
    '+'       shift, and go to state 26
    '-'       shift, and go to state 27
    '!'       shift, and go to state 28
    ';'       shift, and go to state 105
    '('       shift, and go to state 29
    '{'       shift, and go to state 65

    Block       go to state 109
    Stmt        go to state 160
    Exp         go to state 112
    LVal        go to state 113
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 150

   42 Stmt: LVal '=' Exp ';' .

    $default  reduce using rule 42 (Stmt)


state 151

   46 Stmt: IF '(' Cond ')' Stmt .
   47     | IF '(' Cond ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 161

    ELSE      [reduce using rule 46 (Stmt)]
    $default  reduce using rule 46 (Stmt)


state 152

   71 AddExp: AddExp . '+' MulExp
   72       | AddExp . '-' MulExp
   78 RelExp: RelExp '<' AddExp .

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60

    $default  reduce using rule 78 (RelExp)


state 153

   71 AddExp: AddExp . '+' MulExp
   72       | AddExp . '-' MulExp
   79 RelExp: RelExp '>' AddExp .

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60

    $default  reduce using rule 79 (RelExp)


state 154

   71 AddExp: AddExp . '+' MulExp
   72       | AddExp . '-' MulExp
   80 RelExp: RelExp LE_OP AddExp .

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60

    $default  reduce using rule 80 (RelExp)


state 155

   71 AddExp: AddExp . '+' MulExp
   72       | AddExp . '-' MulExp
   81 RelExp: RelExp GE_OP AddExp .

    '+'  shift, and go to state 59
    '-'  shift, and go to state 60

    $default  reduce using rule 81 (RelExp)


state 156

   78 RelExp: RelExp . '<' AddExp
   79       | RelExp . '>' AddExp
   80       | RelExp . LE_OP AddExp
   81       | RelExp . GE_OP AddExp
   83 EqExp: EqExp EQ_OP RelExp .

    '<'    shift, and go to state 141
    '>'    shift, and go to state 142
    LE_OP  shift, and go to state 143
    GE_OP  shift, and go to state 144

    $default  reduce using rule 83 (EqExp)


state 157

   78 RelExp: RelExp . '<' AddExp
   79       | RelExp . '>' AddExp
   80       | RelExp . LE_OP AddExp
   81       | RelExp . GE_OP AddExp
   84 EqExp: EqExp NE_OP RelExp .

    '<'    shift, and go to state 141
    '>'    shift, and go to state 142
    LE_OP  shift, and go to state 143
    GE_OP  shift, and go to state 144

    $default  reduce using rule 84 (EqExp)


state 158

   83 EqExp: EqExp . EQ_OP RelExp
   84      | EqExp . NE_OP RelExp
   86 LAndExp: LAndExp AND_OP EqExp .

    EQ_OP  shift, and go to state 145
    NE_OP  shift, and go to state 146

    $default  reduce using rule 86 (LAndExp)


state 159

   86 LAndExp: LAndExp . AND_OP EqExp
   88 LOrExp: LOrExp OR_OP LAndExp .

    AND_OP  shift, and go to state 147

    $default  reduce using rule 88 (LOrExp)


state 160

   48 Stmt: WHILE '(' Cond ')' Stmt .

    $default  reduce using rule 48 (Stmt)


state 161

   47 Stmt: IF '(' Cond ')' Stmt ELSE . Stmt

    NUMBER    shift, and go to state 24
    IDENT     shift, and go to state 25
    IF        shift, and go to state 100
    WHILE     shift, and go to state 101
    BREAK     shift, and go to state 102
    CONTINUE  shift, and go to state 103
    RETURN    shift, and go to state 104
    '+'       shift, and go to state 26
    '-'       shift, and go to state 27
    '!'       shift, and go to state 28
    ';'       shift, and go to state 105
    '('       shift, and go to state 29
    '{'       shift, and go to state 65

    Block       go to state 109
    Stmt        go to state 162
    Exp         go to state 112
    LVal        go to state 113
    PrimaryExp  go to state 34
    UnaryExp    go to state 35
    UnaryOp     go to state 36
    AddExp      go to state 37
    MulExp      go to state 38


state 162

   47 Stmt: IF '(' Cond ')' Stmt ELSE Stmt .

    $default  reduce using rule 47 (Stmt)
